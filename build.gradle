plugins {
    id 'java'
    id "com.github.spotbugs" version "4.7.3"
}

repositories {
    mavenCentral()
}

sourceSets {
  main {
    java {
      srcDirs = ['src']
      exclude 'build'
      exclude 'bin'
      exclude '.gradle'
    }
  }
}

// Configure spotbugs
// Note: code here is very buggy so we will allow compilation with bugs. A 
// report is still saved.
dependencies {
  spotbugsPlugins 'com.h3xstream.findsecbugs:findsecbugs-plugin:1.7.1'
  spotbugs 'com.github.spotbugs:spotbugs:4.4.0'
}

spotbugsMain {
    ignoreFailures = true 
    showStackTraces = false
    reports {
        html {
            enabled = true
            destination = file("$buildDir/reports/spotbugs/spotbugs.html")
        }
    }
}

//Configure checkstyle

apply plugin: 'checkstyle'

checkstyle {
  ignoreFailures = true 
  toolVersion = '8.11'
  configFile = file('checkstyle.xml')
}

task(runStrategy, dependsOn: ['javadoc', 'build'], type: JavaExec) {
    mainClass = 'strategy.ListDriver'
    classpath = sourceSets.main.runtimeClasspath
}

task(runObserver, dependsOn: ['javadoc', 'build'], type: JavaExec) {
    mainClass = 'observer.BookDriver'
    classpath = sourceSets.main.runtimeClasspath
}

task(runDecorator, dependsOn: ['javadoc', 'build'], type: JavaExec) {
    mainClass = 'decorator.PotatoeDriver'
    classpath = sourceSets.main.runtimeClasspath
}

task(runFactory, dependsOn: ['javadoc', 'build'], type: JavaExec) {
    mainClass = 'factory.HousePlanDriver'
    classpath = sourceSets.main.runtimeClasspath
}

task(runIterator, dependsOn: ['javadoc', 'build'], type: JavaExec) {
    mainClass = 'iterator.AirlineDriver'
    classpath = sourceSets.main.runtimeClasspath
}

tasks.withType(Checkstyle) {
    reports {
        xml.required = false
        html.required = true
    }
}